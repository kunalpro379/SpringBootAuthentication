# ===============================================
# MySQL Database Configuration
# ===============================================

app:
  database:
    type: mysql
    host: ${DATABASE_HOST:localhost}
    port: ${DATABASE_PORT:3306}
    name: ${DATABASE_NAME:authdb}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:password}
    pool:
      maximum-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
    options:
      create-database-if-not-exist: true
      show-sql: false
      format-sql: false

spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}  # Options: create, create-drop, update, validate, none
    show-sql: ${app.database.options.show-sql}
    properties:
      hibernate:
        format_sql: ${app.database.options.format-sql}
        jdbc:
          lob:
            non_contextual_creation: true

# MySQL specific environment variables
# Set these in your environment or .env file:
# DATABASE_HOST=localhost
# DATABASE_PORT=3306
# DATABASE_NAME=authdb
# DATABASE_USERNAME=your_username
# DATABASE_PASSWORD=your_password

# Sample Docker command to run MySQL:
# docker run --name mysql-auth \
#   -e MYSQL_ROOT_PASSWORD=rootpassword \
#   -e MYSQL_DATABASE=authdb \
#   -e MYSQL_USER=authuser \
#   -e MYSQL_PASSWORD=password \
#   -p 3306:3306 \
#   -d mysql:8.0

# Sample SQL commands to create database and user:
# CREATE DATABASE authdb CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
# CREATE USER 'authuser'@'%' IDENTIFIED BY 'password';
# GRANT ALL PRIVILEGES ON authdb.* TO 'authuser'@'%';
# FLUSH PRIVILEGES;
