# ===============================================
# TESTING ENVIRONMENT CONFIGURATION
# ===============================================

# Server Configuration
server.port=8081
server.servlet.context-path=/

# Database Configuration (H2 In-Memory for Testing)
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# JWT Configuration (Shorter expiration for testing)
app.jwtSecret=testSecretKey123ForAuthenticationServerTesting2024!@#
app.jwtExpirationMs=3600000
app.jwtRefreshExpirationMs=7200000

# Email Configuration (Mock for Testing)
spring.mail.host=localhost
spring.mail.port=25
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# Logging Configuration
logging.level.com.auth=WARN
logging.level.org.springframework.security=WARN
logging.level.root=WARN

# Disable Actuator for Testing
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true

# OAuth2 Configuration (Testing)
spring.security.oauth2.client.registration.google.client-id=test-google-client-id
spring.security.oauth2.client.registration.google.client-secret=test-google-client-secret

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Two-Factor Authentication
app.2fa.issuer=AuthServer Test
app.2fa.qr-code-width=100
app.2fa.qr-code-height=100

# Rate Limiting (Disabled for Testing)
app.rate-limit.enabled=false
